openapi: 3.0.3
info:
  title: Eddy API
  version: 1.0.0
paths:
  # TODO - add paths
  /users/{userId}/groups:
    get:
      summary: Gets list of groups user is in
      responses:
        '200':
          description: Returns lists of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'

  /users/{userId}/groups/new:
    post:
      summary: Creates a new group for the user
      requestBody:
        description: Preferences for new group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prefs'

      responses:
        '200':
          description: Returns new group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'

  /users/{userId}/groups/{groupId}:
    post:
      summary: Updates preferences for the group
      requestBody:
        description: New preferences for the group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prefs'

      responses:
        '200':
          description: Returns new group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'

    delete:
      summary: Removes user from group
      requestBody:
        description: The group to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Successful deletion

  /users/{userId}/groups/join:
    post:
      summary: Adds user to a group
      requestBody:
        description: Group ID
        content:
          application/json:
            schema:
              type: integer
              format: int64
              example: 20
      responses:
        '200':
          description: Successful add




components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        preferences:
          $ref: '#/components/schemas/Prefs'

    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 20
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        preferences:
          $ref: '#/components/schemas/Prefs'


    Prefs:
      type: object
      properties:
        start_time:
          type: integer
          description: The 24-hour number for start time
          format: int64
          example: 9

        end_time:
          type: integer
          description: The 24-hour number for end time
          format: int64
          example: 17

        # TODO Room Prefs

    Location:
      type: string
      example: "Scaife"

    Event:
      type: object
      properties:
        name:
          type: string
        days:
          type: array
          items:
            type: string
            example: "Monday"
        location:
          $ref: '#/components/schemas/Location'
        start:
          type: string
          description: 24 hour HH:MM time
          pattern: '\d\d:\d\d'
          example: '09:30'
        end:
          type: string
          description: 24 hour HH:MM time
          pattern: '\d\d:\d\d'
          example: '16:30'

    Schedule:
      type: array
      items:
        $ref: '#/components/schemas/Event'
